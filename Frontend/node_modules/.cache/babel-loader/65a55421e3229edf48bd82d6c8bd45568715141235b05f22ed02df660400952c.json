{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bkhus\\\\instaclone\\\\src\\\\Components\\\\Post\\\\Post.js\";\nimport React, { Component } from 'react';\nimport \"./Post.css\";\nimport { Avatar } from '@material-ui/core';\nimport love from \"../../images/images/love.svg\";\nimport comment from \"../../images/images/comment.svg\";\nimport share from \"../../images/images/share.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.getComments = () => {\n      //calling the backend api\n      // let data=[\n      //     {\n      //         \"username\":\"ASD\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"comment 1\"\n\n      //     },\n      //     {\n      //         \"username\":\"ASD\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"comment 1\"\n\n      //     },\n      //     {\n      //         \"username\":\"ASD\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"comment 1\"\n\n      //     },{\n      //         \"username\":\"ASD\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"comment 1\"\n\n      //     }\n      // ];\n\n      fetch(\"http://localhost:8080/comments\" + this.props.id).then(response => response.json()).then(data => {\n        this.setState({\n          commentList: data\n        });\n      });\n    };\n    this.submitComments = event => {\n      if (event.key == \"Enter\") {\n        let comment = event.currentTarget.value;\n        if (comment != null || comment != undefined) {\n          let payload = {\n            \"commentId\": Math.floor(Math.random() * 100000).toString(),\n            \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n            \"postId\": this.props.id,\n            \"timeStamp\": new Date().getTime(),\n            \"comment\": comment\n          };\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/comments\", requestOptions).then(response => response.json()).then(data => {}).catch(error => {});\n          // ...\n        }\n      }\n    };\n    this.state = {\n      commentList: []\n    };\n  }\n  componentDidMount() {\n    this.getComments();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_header\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"post_image\",\n          src: this.props.profileImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_Username\",\n          children: this.props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.postImage,\n          width: \"615px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: love,\n            className: \"post_reactimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment,\n            className: \"post_reactimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: share,\n            className: \"post_reactimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"fontWeight\": \"bold\",\n            \"marginLeft\": \"20px\"\n          },\n          children: [this.props.likes, \" likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.commentList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_comment\",\n          children: [item.username, \":\", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          text: \"text\",\n          onKeyPress: this.submitComments,\n          className: \"post__commentbox\",\n          placeholder: \"add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Post;","map":{"version":3,"names":["React","Component","Avatar","love","comment","share","Post","constructor","props","getComments","fetch","id","then","response","json","data","setState","commentList","submitComments","event","key","currentTarget","value","undefined","payload","Math","floor","random","toString","JSON","parse","localStorage","getItem","uid","Date","getTime","requestOptions","method","headers","body","stringify","catch","error","state","componentDidMount","render","profileImage","userName","postImage","marginLeft","likes","map","item","index","username","description"],"sources":["C:/Users/bkhus/instaclone/src/Components/Post/Post.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport \"./Post.css\";\r\nimport {Avatar} from '@material-ui/core';\r\n\r\nimport love  from \"../../images/images/love.svg\";\r\nimport comment  from \"../../images/images/comment.svg\";\r\nimport share  from \"../../images/images/share.svg\";\r\n\r\n\r\nclass Post extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            commentList:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments();\r\n    }\r\n    getComments=()=>{//calling the backend api\r\n        // let data=[\r\n        //     {\r\n        //         \"username\":\"ASD\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"comment 1\"\r\n\r\n        //     },\r\n        //     {\r\n        //         \"username\":\"ASD\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"comment 1\"\r\n\r\n        //     },\r\n        //     {\r\n        //         \"username\":\"ASD\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"comment 1\"\r\n\r\n        //     },{\r\n        //         \"username\":\"ASD\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"comment 1\"\r\n\r\n        //     }\r\n        // ];\r\n        \r\n        fetch(\"http://localhost:8080/comments\"+ this.props.id)\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            this.setState({commentList: data})\r\n        });\r\n       \r\n    }\r\n\r\n    submitComments = (event) =>{\r\n        if(event.key == \"Enter\"){\r\n            let comment = event.currentTarget.value;\r\n            if(comment!=null || comment!=undefined){\r\n                \r\n\r\n                let payload={\r\n                    \"commentId\": Math.floor(Math.random() * 100000).toString(),\r\n                    \"userId\": JSON.parse( localStorage.getItem(\"users\")).uid,\r\n                    \"postId\": this.props.id,\r\n                    \"timeStamp\": new Date().getTime(),\r\n                    \"comment\": comment\r\n                }\r\n    \r\n                const requestOptions={\r\n                    method: \"POST\",\r\n                    headers : {'Content-Type':'application/json'},\r\n                    body : JSON.stringify(payload)\r\n                }\r\n    \r\n                fetch(\"http://localhost:8080/comments\",requestOptions)\r\n                .then(response => response.json())\r\n                .then(data =>{\r\n    \r\n                })\r\n                .catch(error =>{\r\n                    \r\n                })\r\n            // ...\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"post_container\">\r\n                {/* Header */}\r\n            <div className=\"post_header\">\r\n                <Avatar className=\"post_image\" src={this.props.profileImage}/>\r\n                <div className=\"post_Username\">{this.props.userName}</div>\r\n            </div>\r\n                 {/* Image */}\r\n            <div>\r\n                <img src ={this.props.postImage} width=\"615px\" />\r\n            </div>\r\n                  {/* Analytics */}\r\n            <div>\r\n                <div style={{marginLeft:\"10px\"}}>\r\n                    <img src={love} className=\"post_reactimage\"/>\r\n                    <img src={comment} className=\"post_reactimage\"/>\r\n                    <img src={share} className=\"post_reactimage\"/>\r\n                </div>\r\n                <div style={{\"fontWeight\":\"bold\",\"marginLeft\":\"20px\"}}>\r\n                    {this.props.likes} likes\r\n                </div>\r\n            </div>\r\n                   {/* Comment seection */}\r\n            <div>\r\n                {\r\n                    this.state.commentList.map((item,index)=>(\r\n                        <div className=\"post_comment\">{item.username}:{item.description}</div>\r\n                    ))\r\n                }\r\n                \r\n                <input text= \"text\" onKeyPress = {this.submitComments} className=\"post__commentbox\" placeholder='add a comment...'/>\r\n            </div>\r\n            </div>\r\n        );\r\n        \r\n    } \r\n}\r\nexport default Post;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}