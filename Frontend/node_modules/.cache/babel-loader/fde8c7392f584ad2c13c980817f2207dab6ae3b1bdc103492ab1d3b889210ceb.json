{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bkhus\\\\instaclone\\\\src\\\\Components\\\\MainPage\\\\MainPage.js\";\nimport React, { Component } from 'react';\nimport \"./MainPage.css\";\nimport Post from '../Post/Post';\nimport upload from '../../images/images/upload.png';\nimport { storage, auth } from '../firebase';\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.getPost = () => {\n      let data = [{\n        \"postId\": \"123456\",\n        \"userName\": \"Khush\",\n        \"postImageURL\": \"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\n        \"timeStamp\": \"12345\",\n        \"likes\": \"1234\"\n      }, {\n        \"postId\": \"123456\",\n        \"userName\": \"Khush\",\n        \"postImageURL\": \"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\n        \"timeStamp\": \"12345\",\n        \"likes\": \"1234\"\n      }, {\n        \"postId\": \"123456\",\n        \"userName\": \"Khush\",\n        \"postImageURL\": \"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\n        \"timeStamp\": \"12345\",\n        \"likes\": \"1234\"\n      }, {\n        \"postId\": \"123456\",\n        \"userName\": \"Khush\",\n        \"postImageURL\": \"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\n        \"timeStamp\": \"12345\",\n        \"likes\": \"1234\"\n      }];\n      this.setState({\n        postArray: data\n      });\n    };\n    this.upload = event => {\n      let image = event.target.files[0];\n      const thisContext = this;\n      if (image == null || image == undefined) return;\n      const storageRef = ref(storage, 'images/' + image.name);\n      const uploadTask = uploadBytesResumable(storageRef, image);\n\n      // Listen for state changes, errors, and completion of the upload.\n      uploadTask.on('state_changed', snapshot => {\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        this.setState({\n          progressBar: progress\n        });\n      }, error => {\n        // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n      }, () => {\n        // Upload completed successfully, now we can get the download URL\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          console.log('File available at', downloadURL);\n          let payload = {\n            \"postId\": Math.floor(Math.random * 100000),\n            \"userId\": JSON.parse(localStorage.getItem(\"user\")).user_id,\n            \"postPath\": downloadURL,\n            \"timeStamp\": new Date().getTime(),\n            \"likeCount\": \"0\"\n          };\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/post\", requestOptions).then(response => response.json()).then(data => {}).catch(error => {});\n        });\n      });\n    };\n    this.state = {\n      postArray: [],\n      progressBar: \"\"\n    };\n  }\n  componentDidMount() {\n    this.getPost();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"textAlign\": \"center\",\n          \"margin\": \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fileupload\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"file-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: upload,\n              className: \"mainpage_uploadicon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.upload,\n            id: \"file-upload\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_text\",\n        children: this.state.progressBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), this.state.postArray.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n        id: item.postId,\n        userName: item.userName,\n        postImage: item.postImageURL,\n        likes: item.likes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default MainPage;","map":{"version":3,"names":["React","Component","Post","upload","storage","auth","ref","uploadBytesResumable","getDownloadURL","MainPage","constructor","props","getPost","data","setState","postArray","event","image","target","files","thisContext","undefined","storageRef","name","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","progressBar","error","then","downloadURL","console","log","payload","Math","floor","random","JSON","parse","localStorage","getItem","user_id","Date","getTime","requestOptions","method","headers","body","stringify","fetch","response","json","catch","state","componentDidMount","render","map","item","index","postId","userName","postImageURL","likes"],"sources":["C:/Users/bkhus/instaclone/src/Components/MainPage/MainPage.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport \"./MainPage.css\";\r\nimport Post from '../Post/Post';\r\nimport upload from '../../images/images/upload.png';\r\nimport {storage,auth} from '../firebase'\r\nimport {ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\"\r\n\r\nclass MainPage extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            postArray:[],\r\n            progressBar:\"\",\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.getPost();\r\n    }\r\n\r\n    getPost=()=>{\r\n        let data =[\r\n            {\r\n                \"postId\":\"123456\",\r\n                \"userName\":\"Khush\",\r\n                \"postImageURL\":\"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\r\n                \"timeStamp\":\"12345\",\r\n                \"likes\":\"1234\"\r\n\r\n                \r\n            },\r\n            {\r\n                \"postId\":\"123456\",\r\n                \"userName\":\"Khush\",\r\n                \"postImageURL\":\"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\r\n                \"timeStamp\":\"12345\",\r\n                \"likes\":\"1234\"\r\n\r\n                \r\n            },\r\n            {\r\n                \"postId\":\"123456\",\r\n                \"userName\":\"Khush\",\r\n                \"postImageURL\":\"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\r\n                \"timeStamp\":\"12345\",\r\n                \"likes\":\"1234\"\r\n\r\n                \r\n            },\r\n            {\r\n                \"postId\":\"123456\",\r\n                \"userName\":\"Khush\",\r\n                \"postImageURL\":\"https://images.unsplash.com/photo-1575936123452-b67c3203c357?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8&auto=format&fit=crop&w=500&q=60\",\r\n                \"timeStamp\":\"12345\",\r\n                \"likes\":\"1234\"\r\n\r\n                \r\n            }\r\n        ];\r\n        this.setState({postArray: data});\r\n    }\r\n    upload=(event)=>{\r\n        let image=event.target.files[0];\r\n        const thisContext=this;\r\n        if(image == null || image == undefined)\r\n            return;\r\n            const storageRef = ref(storage, 'images/' + image.name);\r\n            const uploadTask = uploadBytesResumable(storageRef, image);\r\n            \r\n            // Listen for state changes, errors, and completion of the upload.\r\n            uploadTask.on('state_changed',\r\n              (snapshot) => {\r\n               \r\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                this.setState({progressBar: progress});\r\n              }, \r\n              (error) => {\r\n                // A full list of error codes is available at\r\n                // https://firebase.google.com/docs/storage/web/handle-errors\r\n               \r\n              }, \r\n              () => {\r\n                // Upload completed successfully, now we can get the download URL\r\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n                  console.log('File available at', downloadURL);\r\n                  let payload={\r\n                    \"postId\": Math.floor(Math.random*100000),\r\n                    \"userId\": JSON.parse(localStorage.getItem(\"user\")).user_id,\r\n                    \"postPath\": downloadURL,\r\n                    \"timeStamp\": new Date().getTime(),\r\n                    \"likeCount\":\"0\"\r\n                    }\r\n    \r\n                const requestOptions={\r\n                    method: \"POST\",\r\n                    headers : {'Content-Type':'application/json'},\r\n                    body : JSON.stringify(payload)\r\n                    }\r\n    \r\n                fetch(\"http://localhost:8080/post\",requestOptions)\r\n                .then(response => response.json())\r\n                .then(data =>{\r\n                    \r\n    \r\n                })\r\n                .catch(error =>{\r\n                    \r\n                })\r\n\r\n                });\r\n              }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div style={{\"textAlign\":\"center\", \"margin\":\"10px\"}}>\r\n                    <div className=\"fileupload\">\r\n                       <label for=\"file-upload\">\r\n                          <img src={upload}  className='mainpage_uploadicon'/>\r\n                        </label>   \r\n                    <input onChange={this.upload} id=\"file-upload\" type=\"file\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"upload_text\">{this.state.progressBar}</div>\r\n                {\r\n                    this.state.postArray.map((item,index)=>(\r\n                        <Post id={item.postId} userName={item.userName} postImage={item.postImageURL} likes={item.likes}/>   \r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        );\r\n        \r\n    } \r\n}\r\n        export default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}